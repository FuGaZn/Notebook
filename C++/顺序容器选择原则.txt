From C++ Primer

1.	标准库中顺序容器类型：

vector	可变大小数组。支持快速随机访问。在尾部之外的位置插入或删除元素可能会很慢

deque	双端队列。支持快速随机访问，在头尾位置插入或删除元素很快

list	双向链表。只支持双向顺序访问。在list中任意位置删除或插入元素都很快

forword_list	单向链表。只支持单向顺序访问。在链表中任意位置删除或插入元素都很快

array	固定大小数组。支持快速随机访问。不能添加或删除元素

string	与vector相似，但专门用来保存字符。随机访问快，在尾部插入或删除元素快。

2.	string和vector将元素保存在连续的内存空间中，由于元素是连续存储的，由元素的下标来计算其地址是非常快速的。但是在这两种容器的中间位置插入或删除元素就会非常耗时――每个元素都必须移动到新的存储空间中去。

3.	list和forword_list不支持随机访问，且额外内存开销很大。
4.	deque在中间位置添加或删除元素的代价也很高，但是在两端进行操作速度很快，与list和forword_list的速度相

5.	选择容器的基本原则：

1)	除非有特殊情况，否则使用vector
2)	如果程序有很多小的元素，且空间的额外开销很重要，不要使用list和forword_list。
3)	如果程序要求随机访问元素，使用vector或deque
4)	如果程序要求在容器的中间位置插入或删除元素，使用list或forword_list。
5)	如果程序要求在头尾插入或删除元素，而不用在中间位置插入或删除元素，应该选用deque。
6)	如果如果程序只有在读取输入时需要向容器中间插入元素，随后需要随机访问，则：
a)	可以先向vector后追加数据，最后使用标准库的sort进行排序
b)	如果必须在中间添加元素，可以在输入阶段使用list，然后把数据拷贝到一个vector中。，


